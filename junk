  deleteFavoriteComic = comic => {
    fetch("/deleteFavoriteComic", {   
      method: 'DELETE',
      body: JSON.stringify({
        fav: comic
      }),
      headers: {"Content-Type": "application/json"}})
    .then(response => response.json())
    // .then(json => {
    //   console.log(json);
    //   return json;
    // })
    .then(favs => this.setState({
      favorites: [...this.state.favorites.filter(favstuff => favstuff.num !== comic)]
    }))
    // .then(data => this.setState({ 
    //   favorites: [...this.state.favorites.filter(comicFiltered => comicFiltered.num !== comic)]}, 
    //   () => console.log('deleted: ', data[0])))
    .then(() => console.log("favorites after deleting: " + this.state.favorites));
  }


  app.delete('/deleteFavoriteComic', function(req, res) {
	let fav = req.body.fav;
	
	let contact = favorites.filter(contact => {
		return contact.num == fav;
	})[0]; 

	const index = favorites.indexOf(contact);

	favorites.splice(index, 1);

	console.log("index: " + contact);

	res.json({favorites});
	// res.send(favorites);
	console.log("favorties after deleting: " + favorites);
	res.end("yes");
});

app.post('/favoriteComic', function(req, res) {
	let fav = req.body.fav;
	favorites.push(fav);
	favorites = favorites.map(Number); //TODO: fix
	favorites.sort();
	res.send([fav]);
	console.log("favorites after adding: " + favorites);
	res.end("yes");
});

  favoriteComic = comic => {
      if(this.state.favorites.includes(comic)) {
        console.log('inludes');
      }
      fetch("/favoriteComic/", {   
        method: 'POST',
        body: JSON.stringify({
          fav: comic
        }),
        headers: {"Content-Type": "application/json"}})
      .then(response => response.json())
      .then(data => this.setState({ favorites: [...this.state.favorites, data[0]] }, () => console.log('posted: ', data)))
      .then(() => console.log("favorites: " + this.state.favorites));
  }